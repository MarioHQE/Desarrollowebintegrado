version: "3.8"

services:
  # Aplicaci√≥n Spring Boot
  desarrolloweb:
    container_name: desarrolloweb-app
    build: ./desarrolloweb
    restart: unless-stopped
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DATABASE_URL=jdbc:mysql://minimarket.ckbesa4wqwo4.us-east-1.rds.amazonaws.com:3306/minimarket?createDatabaseIfNotExist=true
      - DATABASE_USERNAME=adminsq
      - DATABASE_PASSWORD=Mario14y15.
      - STRIPE_SECRET_KEY=sk_test_51RRpwwRS5ApzbFdePxJPtFPIU5SoWXi6a9r3BfW92TNd6cPSTMf3n3BfnazI9t0KBir2VbNPYLifXVjSVUmPrlPX001PqO7jS7
      - STRIPE_WEBHOOK_SECRET=whsec_9850a314cfa962c23f3616368e571af42d3d78f675cac0825c67d2d5bdffbee5
      - AWS_ACCESS_KEY=AKIAWYOPDF3QT7NDAJUC
      - AWS_SECRET_KEY=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
      - MAIL_USERNAME=marioelpro08@gmail.com
      - MAIL_PASSWORD=bmch rbeg tfmx ondv
    networks:
      - app-network
    expose:
      - "3600"

  # Nginx como proxy reverso
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - desarrolloweb
    networks:
      - app-network

  # Certbot para Let's Encrypt
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email marioelpro08@gmail.com --agree-tos --no-eff-email -d 54.210.224.54.nip.io

networks:
  app-network:
    driver: bridge 